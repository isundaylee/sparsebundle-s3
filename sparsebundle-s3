#!/usr/bin/env python3

import logging
import os
import glob
import argparse

from sparsebundle_s3.uploader import Uploader

PACKAGE_COUNT = 0x1
STORAGE_CLASS = 'DEEP_ARCHIVE'

logger = logging.getLogger('main')


def main():
    logging.basicConfig(
        format="[%(asctime)-15s] [%(levelname)-8s] [%(name)-8s] %(message)s",
        level=logging.INFO)

    parser = argparse.ArgumentParser(
        description="Packages and uploads a macOS sparse bundle onto S3.")
    parser.add_argument('bundle', help='Path to the sparse bundle file.')
    parser.add_argument(
        'tmpdir', help='Path to a temporary dir for storing band packages.')
    parser.add_argument('bucket', help='S3 bucket to upload to.')
    parser.add_argument('name', help='Top-level S3 prefix to upload to.')

    args = parser.parse_args()
    bundle = args.bundle
    outdir = args.tmpdir
    bucket = args.bucket
    name = args.name

    logger.info('Retrieving bundle file list')
    bundle_files = list(glob.glob(os.path.join(bundle, '**'), recursive=True))
    logger.info('Bundle contains %d files', len(bundle_files))

    uploader = Uploader(bundle, bundle_files, PACKAGE_COUNT, outdir,
                        bucket, name, STORAGE_CLASS)
    uploader.upload()


main()
